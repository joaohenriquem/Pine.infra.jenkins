pipeline {
    agent any
        environment {
            // Environment Git Variables
			publishprofile = "Boletador.Captacao.Web"
			
			gitRepo = "https://tfs.pine.com/DefaultCollection/TI%20Pine/_git/Pine.Boletador.Captacao.Site"
			gitBranch = "master"
			MSBuildProjectFile = "Boletador.Captacao.sln"
			
			// Environment Artifactory Variables
			artifactPath = "PineOnline.Documentos.WebApi.Dev"
            workPath = "E:/JenkinsBuilds/${env.JOB_NAME}"
            publishPath = "E:/JenkinsBuilds/${env.JOB_NAME}/publish"
            archivePath = "${publishPath}/_PublishedWebsites/" 
            
			// Environment Build Variables
            winsetcred = 'null'
            SrvPassword = 'null'
            sessionWin = 'null'
            copyartifacts = 'null'
			
			// Environment Deploy Variables
			serverHost = "pinedevweb01"
            deployPath = "${archivePath}${publishprofile}"
            applicationServerPath = "E:/sistemas/"
			applicationFolderName = "deployteste"
            filenameZip = "${publishprofile}.zip"
            filePathZip = "${applicationServerPath}${applicationFolderName}/${filenameZip}"
			
			// Environment Sonarqube Variables
            projectKey = "PineOnline.Documentos.WebApi-QA"
            sonarurl = "http://sonarqube.hml.pine.com/api/qualitygates/project_status?projectKey=${projectKey}"
        }
        stages {
            stage('Clone Source') {
                steps {
                    dir ("${workPath}"){
                        script {  
                            git branch: "${gitBranch}", credentialsId: 'tfsleandro123', url: "${gitRepo}"
							
							//def overwriteSource1 = "${workPath}/${publishprofile}/Deploy/DEV/*"
							//def overwriteSource2 = "${workPath}/${publishprofile}/Deploy/"
							
							//powershell "copy-item ${overwriteSource1} ${publishPath} -recurse -force" 
							//powershell "remove-item ${overwriteSource2} -recurse -force" 
                        }
                    }
                }
            }
			
			stage('Fortify') {
                steps {
                    dir ("${workPath}"){
                        script {  
							def MsBuildHomeVS = tool 'MsBuildDefault'
							def MSBuildPathVS = "${MsBuildHomeVS}MSBuild.exe"
							def FortifyHome = 'E:/FortiFy/Fortify_SCA_and_Apps_18.20/bin/'
							
							bat "\"${FortifyHome}sourceanalyzer.exe\"  -b \"$JOB_NAME\" -clean "
							bat "\"${FortifyHome}sourceanalyzer.exe\"  -b \"$JOB_NAME\" \"${MSBuildPathVS}\" \"${MSBuildProjectFile}\" "
							bat "\"${FortifyHome}sourceanalyzer.exe\"  -b \"$JOB_NAME\" -scan -Xmx4608M -f \"results.fpr\" "
							bat "\"${FortifyHome}fortifyclient.bat\"  -url \"http://172.16.47.117:8080/ssc\" -authtoken \"7ce15431-e2da-4ea2-a199-6f7e85c15006\" uploadFPR -f \"results.fpr\" -project \"PineBoletadorCaptacaoSite\" -version \"1.0\" "
                        
						}
                    }
                }
            }
			
        }
    }
